@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    List<Object> menuItems = new List<Object>();

    menuItems.Add(new
    {
        text = "General",
        separator = true,
    });
    menuItems.Add(new
    {
        text = "Dashboard",
        url = "/Dashboard",
        iconCss = "fa-solid fa-box",
    });
    menuItems.Add(new
    {
        text = "Categories",
        url = "/Category",
        iconCss = "fa-solid fa-folder-closed",
    });
    menuItems.Add(new
    {
        text = "Transactions",
        iconCss = "fa-solid fa-arrow-right-arrow-left",
        url = "/Transaction"
    });

    // menuItems.Add(new
    // {
    //     text = "Extras",
    //     separator = true,
    // });
    // menuItems.Add(new
    // {
    //     text = "Reports",
    //     iconCss = "fa-solid fa-chart-simple",
    //     url = "#"
    // }); menuItems.Add(new
    // {
    //     text = "Settings",
    //     iconCss = "fa-solid fa-gear",
    //     url = "#"
    // });
}


<ejs-sidebar id="sidebar" width="290px" enableDock dockSize="100px"
             target=".dock-target" enableGestures="false">
    <e-content-template>

        <div class="logo-wrapper">
            <div class="app-logo">
                <img src="~/logo.png" />
            </div>
            <div class="w-100"></div>
            <i id="sidebar-toggler" class="fa-solid"></i>
        </div>

        <div class="profile-wrapper">
            <img class="profile-pic" src="~/profile.jpg" />
            <div class="titles d-flex flex-column ps-3">
                <h6 class="mb-0">Wallet App</h6>
                <span class="text-muted">Ashton Cox</span>
            </div>
        </div>

        <!-- Додайте перемикач теми тут -->
        <div class="theme-switcher">
            <label class="switch">
                <input type="checkbox" id="theme-switch">
                <span class="slider round"></span>
            </label>
            <span id="theme-label" class="theme-label">Темна тема</span>
        </div>

        <ejs-menu id="menu"
                  items="menuItems"
                  orientation="Vertical"
                  hamburgerMode></ejs-menu>
    </e-content-template>
</ejs-sidebar>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const toggleSwitch = document.querySelector('#theme-switch');
        const themeLabel = document.querySelector('#theme-label');
        const currentTheme = localStorage.getItem('theme') || 'dark';

        // Встановити поточну тему
        document.documentElement.setAttribute('data-theme', currentTheme);

        if (currentTheme === 'light') {
            toggleSwitch.checked = true;
            themeLabel.textContent = "Світла тема";
        }

        toggleSwitch.addEventListener('change', function (event) {
            const theme = event.target.checked ? 'light' : 'dark';
            document.documentElement.setAttribute('data-theme', theme);
            localStorage.setItem('theme', theme);
            themeLabel.textContent = theme === 'light' ? "Світла тема" : "Темна тема";

            // Оновити стиль графіків після зміни теми
            updateCharts();
        });

        // Функція для оновлення стилю графіків
        function updateCharts() {
            // Отримати інстанції графіків
            const doughnutChart = document.getElementById('doughnutchart').ej2_instances[0];
            const splineChart = document.getElementById('spline-chart').ej2_instances[0];

            // Оновити фон для кожного графіку
            const newBackgroundColor = getComputedStyle(document.documentElement).getPropertyValue('--widget-background-color');
            const newTextColor = getComputedStyle(document.documentElement).getPropertyValue('--text-color');
            const newGridLineColor = getComputedStyle(document.documentElement).getPropertyValue('--grid-line-color');

            doughnutChart.background = newBackgroundColor;
            doughnutChart.legendSettings.textStyle.color = newTextColor;
            doughnutChart.tooltipSettings.textStyle.color = newTextColor;

            splineChart.background = newBackgroundColor;
            splineChart.legendSettings.textStyle.color = newTextColor;
            splineChart.primaryYAxis.majorGridLines.color = newGridLineColor;
            splineChart.primaryXAxis.majorGridLines.color = newGridLineColor;
            splineChart.primaryYAxis.labelStyle.color = newTextColor;
            splineChart.primaryXAxis.labelStyle.color = newTextColor;

            // Оновити графіки
            doughnutChart.refresh();
            splineChart.refresh();
        }

        // Викликати функцію при завантаженні сторінки
        updateCharts();
    });


</script>
